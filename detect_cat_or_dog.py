# -*- coding: utf-8 -*-
"""detect_cat_or_dog.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-p1URcfo6u12r2URgdDLUagcJ1yTY3Ft
"""

from google.colab import drive
drive.mount('/content/drive')

from keras.src.legacy.preprocessing.image import ImageDataGenerator
train_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)

# prompt: unzip a file

!unzip /content/drive/MyDrive/internship/dataset.zip -d /content/drive/MyDrive/internship/

train_set=train_datagen.flow_from_directory('/content/drive/My Drive/internship/dataset/training_set',
                                            target_size=(64,64),batch_size=32,class_mode='binary')

train_set.class_indices

test_set=test_datagen.flow_from_directory('/content/drive/My Drive/internship/dataset/test_set',
                                            target_size=(64,64),batch_size=32,class_mode='binary')

test_set.class_indices

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense,Dropout
cnn_model=Sequential()
cnn_model.add(Conv2D(32,(3,3),input_shape=(66,66,3),activation='relu'))
cnn_model.add(MaxPooling2D(pool_size=(2,2)))
cnn_model.add(Conv2D(64,(3,3),activation='relu'))
cnn_model.add(MaxPooling2D(pool_size=(2,2)))
#cnn_model.add(Dropout(0.2))
cnn_model.add(Conv2D(28,(3,3),activation='relu'))
cnn_model.add(MaxPooling2D(pool_size=(2,2)))
cnn_model.add(Flatten())
cnn_model.add(Dense(units=12,activation='relu'))
cnn_model.add(Dense(units=1,activation='sigmoid'))
cnn_model.summary()

cnn_model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

cnn_model.fit(x=train_set,validation_data=test_set,epochs=50,verbose=1)

import matplotlib.pyplot as plt
plt.plot(cnn_model.history.history['accuracy'])
plt.plot(cnn_model.history.history['val_accuracy'])

from skimage.io import imread
img=imread('/content/drive/My Drive/g.webp')
img

from skimage.transform import resize
img=resize(img,(64,64))
img.shape

import numpy as np
img=np.expand_dims(img,axis=0)
img.shape

pr=cnn_model.predict(img)
print("predicted value=",pr)
k=(pr>.5).astype(int)[0][0]
print(k)
if k==0:
  print("it is a cat")
else:
  print("it is a dog")